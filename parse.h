#include <stdlib.h>
#include <stdio.h>
#include "struct_arbre.h"

int strcomp(char* str1,char* str2);

int Accept(char* str, Branch** branch);
int HEXDIG(char * str, Branch** branch);
int pchar(char * str, Branch** branch);
int segment(char * str, Branch** branch);
int OWS(char *str, Branch** branch);
int qdtext(char *str, Branch** branch);
int RWS(char *str, Branch** branch);
int obs_text(char *str, Branch** branch);
int ctext(char *car, Branch** branch);
int vchar(char *car, Branch** branch);
int ALPHA(char *car, Branch** branch);
int DIGIT(char *car, Branch** branch);
int qvalue(char *str, Branch** branch);
int weight(char *str,Branch** branch);
int scheme(char *str, Branch** branch);
int quoted_pair(char *str, Branch** branch);
int tchar(char *car, Branch** branch);
int comment(char *str, Branch** branch);
int token(char* str, Branch** branch); // 1* tchar
int content_coding(char *str, Branch** branch);
int codings(char *str, Branch** branch);
int Accept_Encoding(char* str, Branch** branch);
int connection_option(char *str, Branch** branch);
int Connection(char *str, Branch** branch);
int method(char *str, Branch** branch);
int product_version(char* str, Branch** branch);
int type(char* str, Branch** branch);
int subtype(char* str, Branch** branch);
int product(char* str, Branch** branch);
int User_Agent(char* str, Branch** branch);
int HEXDIG(char *car, Branch** branch);
int quoted_string(char* str, Branch** branch);
int accept_ext(char *str,Branch** branch);
int accept_params(char* str, Branch** branch);
int parameter(char *str, Branch** branch);
int media_range(char* str, Branch** branch);
int sub_delims(char *car, Branch** branch);
int pct_encoded(char *str, Branch** branch);
int unreserved(char *car, Branch** branch);
int asterisk_form(char *str, Branch** branch);
int transfer_parameter(char *str, Branch** branch);
int transfer_extension(char *str, Branch** branch);
int transfer_coding(char* str, Branch** branch);
int Transfer_Encoding(char* str, Branch** branch);
int cookie_octet(char *str,Branch** branch);
int cookie_name(char *str, Branch** branch);
int cookie_value(char *str, Branch** branch);
int cookie_pair(char* str, Branch** branch);
int cookie_string(char* str, Branch** branch);
int segment(char *str, Branch** branch);
int absolute_path(char* str, Branch** branch);
int query(char* str, Branch** branch);
int userinfo(char* str,Branch** branch);
int dec_octet(char *str, Branch** branch);
int IPv4address(char *str,Branch** branch);
int host(char *str, Branch** branch);
int h16(char *str, Branch** branch);
int ls32(char *str, Branch** branch);
int Content_Lenght(char* str, Branch** branch);
int Content_Lenght_Header(char* str, Branch** branch);
int authority(char* str, Branch** branch);
int hier_part(char* str, Branch** branch);
int reg_name(char* str, Branch** branch);
int port(char* str, Branch **branch);
int uri_host(char* str, Branch** branch);
int Host(char* str, Branch** branch);
int relative_part(char* str,Branch** branch);
int partial_URI(char* str, Branch** branch);
int absolute_URI(char* str,Branch** branch);
int Connection_header(char* str, Branch** branch);
int Accept_Encoding_header(char* str, Branch** branch);
int Accept_header(char* str,Branch** branch);
int User_Agent_header(char* str,Branch** branch);
int referer(char* str, Branch** branch);
int Referer_header(char* str, Branch** branch);
int origin_form(char* str, Branch** branch);
int request_target(char *str, Branch** branch);
int HTTP_name(char *str, Branch** branch);
int HTTP_version(char* str, Branch** branch);
int request_line(char *str, Branch** branch);
int status_code(char* str, Branch** branch);
int reason_phrase(char *str, Branch** branch);
int status_line(char *str, Branch** branch);
int start_line(char *str, Branch** branch);
int Accept(char* str, Branch** branch);
int Host_header(char* str, Branch** branch);
int Cookie_header(char* str, Branch** branch);
int Transfer_Encoding_header(char* str, Branch** branch);
int header_field(char* str, Branch** branch);
int message_body(char* str, Branch** branch);
int HTTP_message(char* str, Branch** branch);
